diff --git a/include/X11/Xlib.h b/include/X11/Xlib.h
index 84403f7..1212d04 100644
--- a/include/X11/Xlib.h
+++ b/include/X11/Xlib.h
@@ -1385,7 +1385,7 @@ typedef struct {
 
 _XFUNCPROTOBEGIN
 
-#if defined(WIN32) && !defined(_XLIBINT_)
+#if defined(WIN32) && !defined(__MINGW32__) && !defined(_XLIBINT_)
 #define _Xdebug (*_Xdebug_p)
 #endif
 
diff --git a/include/X11/Xlibint.h b/include/X11/Xlibint.h
index 6b95bcf..7505bed 100644
--- a/include/X11/Xlibint.h
+++ b/include/X11/Xlibint.h
@@ -378,7 +378,7 @@ struct _XLockPtrs {
 	);
 };
 
-#if defined(WIN32) && !defined(_XLIBINT_)
+#if defined(WIN32) && !defined(__MINGW32__) && !defined(_XLIBINT_)
 #define _XCreateMutex_fn (*_XCreateMutex_fn_p)
 #define _XFreeMutex_fn (*_XFreeMutex_fn_p)
 #define _XLockMutex_fn (*_XLockMutex_fn_p)
diff --git a/modules/im/ximcp/imDefIc.c b/modules/im/ximcp/imDefIc.c
index 143bd59..005b998 100644
--- a/modules/im/ximcp/imDefIc.c
+++ b/modules/im/ximcp/imDefIc.c
@@ -1340,7 +1340,7 @@ _XimGetInputStyle(
 
     for (p = arg; p && p->name; p++) {
 	if (!(strcmp(p->name, XNInputStyle))) {
-	    *input_style = (XIMStyle)p->value;
+	    *input_style = (XIMStyle)(intptr_t)p->value;
 	    return True;
 	}
     }
diff --git a/modules/im/ximcp/imRm.c b/modules/im/ximcp/imRm.c
index cb9e1b2..0574357 100644
--- a/modules/im/ximcp/imRm.c
+++ b/modules/im/ximcp/imRm.c
@@ -836,7 +836,7 @@ _XimEncodeStyle(
     XIMStyle		*out;
 
     out = (XIMStyle *)((char *)top + info->offset);
-    *out = (XIMStyle)val;
+    *out = (XIMStyle)(intptr_t)val;
     return True;
 }
 
@@ -874,7 +874,7 @@ _XimEncodeResetState(
     XIMResetState	*out;
 
     out = (XIMResetState *)((char *)top + info->offset);
-    *out = (XIMResetState)val;
+    *out = (XIMResetState)(intptr_t)val;
     return True;
 }
 
@@ -930,7 +930,7 @@ _XimEncodeHotKetState(
     XIMHotKeyState	*out;
 
     out = (XIMHotKeyState *)((char *)top + info->offset);
-    *out = (XIMHotKeyState)val;
+    *out = (XIMHotKeyState)(intptr_t)val;
     return True;
 }
 
@@ -995,7 +995,7 @@ _XimEncodeLong(
     unsigned long	*out;
 
     out = (unsigned long *)((char *)top + info->offset);
-    *out = (unsigned long)val;
+    *out = (unsigned long)(intptr_t)val;
     return True;
 }
 
@@ -1034,7 +1034,7 @@ _XimEncodeLineSpace(
     int			*out;
 
     out = (int *)((char *)top + info->offset);
-    *out = (long)val;
+    *out = (long)(intptr_t)val;
     return True;
 }
 
@@ -1060,7 +1060,7 @@ _XimEncodePreeditState(
     XIMPreeditState	*out;
 
     out = (XIMPreeditState *)((char *)top + info->offset);
-    *out = (XIMPreeditState)val;
+    *out = (XIMPreeditState)(intptr_t)val;
     return True;
 }
 
diff --git a/modules/im/ximcp/imRmAttr.c b/modules/im/ximcp/imRmAttr.c
index 9d4e462..69523cc 100644
--- a/modules/im/ximcp/imRmAttr.c
+++ b/modules/im/ximcp/imRmAttr.c
@@ -589,7 +589,7 @@ _XimValueToAttribute(
 	    return False;
 	}
 
-	*((CARD8 *)buf) = (CARD8)(long)value;
+	*((CARD8 *)buf) = (CARD8)(intptr_t)value;
 	*len = ret_len;
 	break;
 
@@ -600,7 +600,7 @@ _XimValueToAttribute(
 	    return False;
 	}
 
-	*((CARD16 *)buf) = (CARD16)(long)value;
+	*((CARD16 *)buf) = (CARD16)(intptr_t)value;
 	*len = ret_len;
 	break;
 
@@ -613,7 +613,7 @@ _XimValueToAttribute(
 	    return False;
 	}
 
-	*((CARD32 *)buf) = (CARD32)(long)value;
+	*((CARD32 *)buf) = (CARD32)(intptr_t)value;
 	*len = ret_len;
 	break;
 
diff --git a/src/KeysymStr.c b/src/KeysymStr.c
index c7c4704..140cfc4 100644
--- a/src/KeysymStr.c
+++ b/src/KeysymStr.c
@@ -107,7 +107,7 @@ char *XKeysymToString(KeySym ks)
 	XrmQuark empty = NULLQUARK;
 	GRNData data;
 
-	snprintf(buf, sizeof(buf), "%lX", ks);
+	snprintf(buf, sizeof(buf), "%" PRIXPTR, (uintptr_t)ks);
 	resval.addr = (XPointer)buf;
 	resval.size = strlen(buf) + 1;
 	data.name = (char *)NULL;
diff --git a/src/ParseCmd.c b/src/ParseCmd.c
index 6771908..182d857 100644
--- a/src/ParseCmd.c
+++ b/src/ParseCmd.c
@@ -199,7 +199,7 @@ XrmParseCommand(
 
 		case XrmoptionSkipNArgs:
 		    {
-			register int j = 1 + (long) options[i].value;
+			register int j = (int)(1 + (intptr_t) options[i].value);
 
 			if (j > myargc) j = myargc;
 			for (; j > 0; j--) {
diff --git a/src/XlibInt.c b/src/XlibInt.c
index 7296948..91af8ec 100644
--- a/src/XlibInt.c
+++ b/src/XlibInt.c
@@ -31,7 +31,7 @@ from The Open Group.
  *	interface library (Xlib) to the X Window System Protocol V11.0.
  */
 
-#ifdef WIN32
+#if defined(WIN32) && !defined(__MINGW32__)
 #define _XLIBINT_
 #endif
 #ifdef HAVE_CONFIG_H
@@ -1740,11 +1740,7 @@ void *_XGetRequest(Display *dpy, CARD8 type, size_t len)
  * be converted to "C:/usr/X11R6.3/lib/X11/locale/locale.dir".
  */
 
-static int access_file (path, pathbuf, len_pathbuf, pathret)
-    char* path;
-    char* pathbuf;
-    int len_pathbuf;
-    char** pathret;
+static int access_file (const char *path, char *pathbuf, int len_pathbuf, char **pathret)
 {
     if (access (path, F_OK) == 0) {
 	if (strlen (path) < len_pathbuf)
@@ -1759,15 +1755,11 @@ static int access_file (path, pathbuf, len_pathbuf, pathret)
     return 0;
 }
 
-static int AccessFile (path, pathbuf, len_pathbuf, pathret)
-    char* path;
-    char* pathbuf;
-    int len_pathbuf;
-    char** pathret;
+static int AccessFile (const char *path, char *pathbuf, int len_pathbuf, char **pathret)
 {
     unsigned long drives;
     int i, len;
-    char* drive;
+    const char* drive;
     char buf[MAX_PATH];
     char* bufp;
 
@@ -1832,15 +1824,14 @@ static int AccessFile (path, pathbuf, len_pathbuf, pathret)
     return 0;
 }
 
-int _XOpenFile(path, flags)
-    _Xconst char* path;
-    int flags;
+int _XOpenFile(_Xconst char *path, int flags)
 {
     char buf[MAX_PATH];
     char* bufp = NULL;
     int ret = -1;
     UINT olderror = SetErrorMode (SEM_FAILCRITICALERRORS);
 
+
     if (AccessFile (path, buf, MAX_PATH, &bufp))
 	ret = open (bufp, flags);
 
@@ -1851,10 +1842,7 @@ int _XOpenFile(path, flags)
     return ret;
 }
 
-int _XOpenFileMode(path, flags, mode)
-    _Xconst char* path;
-    int flags;
-    mode_t mode;
+int _XOpenFileMode(_Xconst char *path, int flags, mode_t mode)
 {
     char buf[MAX_PATH];
     char* bufp = NULL;
@@ -1871,9 +1859,7 @@ int _XOpenFileMode(path, flags, mode)
     return ret;
 }
 
-void* _XFopenFile(path, mode)
-    _Xconst char* path;
-    _Xconst char* mode;
+void* _XFopenFile(_Xconst char *path, _Xconst char *mode)
 {
     char buf[MAX_PATH];
     char* bufp = NULL;
@@ -1890,8 +1876,7 @@ void* _XFopenFile(path, mode)
     return ret;
 }
 
-int _XAccessFile(path)
-    _Xconst char* path;
+int _XAccessFile(_Xconst char *path)
 {
     char buf[MAX_PATH];
     char* bufp;
@@ -1909,7 +1894,7 @@ int _XAccessFile(path)
 
 #endif
 
-#ifdef WIN32
+#if defined(WIN32) && !defined(__MINGW32__)
 #undef _Xdebug
 int _Xdebug = 0;
 int *_Xdebug_p = &_Xdebug;
diff --git a/src/Xxcbint.h b/src/Xxcbint.h
index 4ef13d2..3d2377a 100644
--- a/src/Xxcbint.h
+++ b/src/Xxcbint.h
@@ -8,7 +8,7 @@
 #include <stdint.h>
 #include <X11/Xlibint.h>
 #ifdef WIN32
-#include <X11/Xwindows.h>
+#include <X11/XWinsock.h>
 #endif
 #include <X11/Xlib-xcb.h>
 #include "locking.h"
diff --git a/src/locking.c b/src/locking.c
index 9f4fe06..448b699 100644
--- a/src/locking.c
+++ b/src/locking.c
@@ -67,7 +67,7 @@ in this Software without prior written authorization from The Open Group.
 /* in lcWrap.c */
 extern LockInfoPtr _Xi18n_lock;
 
-#ifdef WIN32
+#if defined(WIN32) && !defined(__MINGW32__)
 static DWORD _X_TlsIndex = (DWORD)-1;
 
 void _Xthread_init(void)
diff --git a/src/util/makekeys.c b/src/util/makekeys.c
index 5613e42..12d763d 100644
--- a/src/util/makekeys.c
+++ b/src/util/makekeys.c
@@ -62,7 +62,7 @@ parse_line(const char *buf, char *key, KeySym *val, char *prefix)
 
     /* See if we can catch a straight XK_foo 0x1234-style definition first;
      * the trickery around tmp is to account for prefices. */
-    i = sscanf(buf, "#define %127s 0x%lx", key, val);
+    i = sscanf(buf, "#define %127s 0x%" PRIxPTR, key, (uintptr_t*)val);
     if (i == 2 && (tmp = strstr(key, "XK_"))) {
         memcpy(prefix, key, tmp - key);
         prefix[tmp - key] = '\0';
@@ -127,8 +127,8 @@ main(int argc, char *argv[])
             if (val == XK_VoidSymbol)
                 val = 0;
             if (val > 0x1fffffff) {
-                fprintf(stderr, "ignoring illegal keysym (%s, %lx)\n", key,
-                        val);
+                fprintf(stderr, "ignoring illegal keysym (%s, %" PRIxPTR ")\n", key,
+                        (uintptr_t)val);
                 continue;
             }
 
@@ -213,10 +213,10 @@ next1:	;
 	offsets[j] = k;
 	indexes[i] = k;
 	val = info[i].val;
-	printf("0x%.2"PRIx32", 0x%.2"PRIx32", 0x%.2lx, 0x%.2lx, 0x%.2lx, 0x%.2lx, ",
+	printf("0x%.2" PRIx32 ", 0x%.2" PRIx32 ", 0x%.2" PRIxPTR ", 0x%.2" PRIxPTR ", 0x%.2" PRIxPTR ", 0x%.2" PRIxPTR ", ",
 	       (sig >> 8) & 0xff, sig & 0xff,
-	       (val >> 24) & 0xff, (val >> 16) & 0xff,
-	       (val >> 8) & 0xff, val & 0xff);
+	       (uintptr_t)((val >> 24) & 0xff), (uintptr_t)((val >> 16) & 0xff),
+	       (uintptr_t)((val >> 8) & 0xff), (uintptr_t)(val & 0xff));
 	for (name = info[i].name, k += 7; (c = *name++); k++)
 	    printf("'%c',", c);
 	printf((i == (ksnum-1)) ? "0\n" : "0,\n");
diff --git a/src/xlibi18n/IMWrap.c b/src/xlibi18n/IMWrap.c
index a7c1d98..ec94a7c 100644
--- a/src/xlibi18n/IMWrap.c
+++ b/src/xlibi18n/IMWrap.c
@@ -89,12 +89,12 @@ _XCopyToArg(XPointer src, XPointer *dst, unsigned int size)
 	} u;
 	if (size <= sizeof(XPointer)) {
 	    memcpy((char *)&u, (char *)src, (int)size);
-	    if (size == sizeof(long))	       *dst = (XPointer)u.longval;
+	    if (size == sizeof(long))	       *dst = (XPointer)(intptr_t)u.longval;
 #ifdef LONG64
-	    else if (size == sizeof(int))      *dst = (XPointer)(long)u.intval;
+	    else if (size == sizeof(int))      *dst = (XPointer)(intptr_t)u.intval;
 #endif
-	    else if (size == sizeof(short))    *dst = (XPointer)(long)u.shortval;
-	    else if (size == sizeof(char))     *dst = (XPointer)(long)u.charval;
+	    else if (size == sizeof(short))    *dst = (XPointer)(intptr_t)u.shortval;
+	    else if (size == sizeof(char))     *dst = (XPointer)(intptr_t)u.charval;
 	    else if (size == sizeof(char*))    *dst = (XPointer)u.charptr;
 	    else if (size == sizeof(XPointer)) *dst = (XPointer)u.ptr;
 	    else memcpy( (char*)dst, (char*)src, (int)size );
diff --git a/src/xlibi18n/XDefaultIMIF.c b/src/xlibi18n/XDefaultIMIF.c
index 7c32ce2..bb57cd0 100644
--- a/src/xlibi18n/XDefaultIMIF.c
+++ b/src/xlibi18n/XDefaultIMIF.c
@@ -284,7 +284,7 @@ _SetICValueData(XIC ic, XIMArg *values, XICOp_t mode)
     for (p = values; p != NULL && p->name != NULL; p++) {
 	if(strcmp(p->name, XNInputStyle) == 0) {
 	    if (mode == CREATE_IC)
-		ic->core.input_style = (XIMStyle)p->value;
+		ic->core.input_style = (XIMStyle)(intptr_t)p->value;
 	} else if (strcmp(p->name, XNClientWindow) == 0) {
 	    ic->core.client_window = (Window)p->value ;
 	} else if (strcmp(p->name, XNFocusWindow) == 0) {
diff --git a/src/xlibi18n/lcWrap.c b/src/xlibi18n/lcWrap.c
index 3824260..fa9b139 100644
--- a/src/xlibi18n/lcWrap.c
+++ b/src/xlibi18n/lcWrap.c
@@ -502,15 +502,15 @@ _XlcCopyFromArg(
     int size)
 {
     if (size == sizeof(long))
-	*((long *) dst) = (long) src;
+	*((long *) dst) = (intptr_t) src;
 #ifdef LONG64
     else if (size == sizeof(int))
-	*((int *) dst) = (int)(long) src;
+	*((int *) dst) = (int)(intptr_t) src;
 #endif
     else if (size == sizeof(short))
-	*((short *) dst) = (short)(long) src;
+	*((short *) dst) = (short)(intptr_t) src;
     else if (size == sizeof(char))
-	*((char *) dst) = (char)(long) src;
+	*((char *) dst) = (char)(intptr_t) src;
     else if (size == sizeof(XPointer))
 	*((XPointer *) dst) = (XPointer) src;
     else if (size > sizeof(XPointer))
